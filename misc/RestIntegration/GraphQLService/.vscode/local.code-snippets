{
    "_author": {
        "prefix": "_author",
        "body": [
            "type Author {",
            "    id: Int!",
            "    name: String!",
            "}",
            ""
        ],
        "description": "_author"
    },
    "_preview": {
        "prefix": "_preview",
        "body": [
            "extend type Book {",
            "    author: Author ",
            "        @variable(name: \"authorId\", fromParent: \"authorId\")",
            "        @http(",
            "            clientName: \"rest\",",
            "            method: GET",
            "            requestUri: \"authors/{authorId}\",",
            "            headers: null)",
            "}"
        ],
        "description": "_preview"
    },
    "_bookExtensions": {
        "prefix": "_bookExtensions",
        "body": [
            "[ExtendObjectType<Book>]",
            "public class BookExtensions",
            "{",
            "    ",
            "}",
            ""
        ],
        "description": "_bookExtensions"
    },
    "_fetchAuthor": {
        "prefix": "_fetchAuthor",
        "body": [
            "using var client = clientFactory.CreateClient(\"rest\");",
            "var content = await client.GetByteArrayAsync($\"authors/{book.AuthorId}\", cancellationToken);",
            "return JsonDocument.Parse(content).RootElement;"
        ],
        "description": "_fetchAuthor"
    },
    "_getAuthor": {
        "prefix": "_getAuthor",
        "body": [
            "[GraphQLType(\"Author!\")]",
            "public async Task<JsonElement> GetAuthorAsync(",
            "    [Parent] Book book,",
            "    [Service] IHttpClientFactory clientFactory,",
            "    CancellationToken cancellationToken)",
            "{",
            "",
            "}"
        ],
        "description": "_getAuthor"
    },
    "_addDocument": {
        "prefix": "_addDocument",
        "body": [
            ".AddDocumentFromFile(\"./Schema.graphql\")"
        ],
        "description": "_addDocument"
    },
    "_addTypeExt": {
        "prefix": "_addTypeExt",
        "body": [
            ".AddTypeExtension<BookExtensions>()"
        ],
        "description": "_addTypeExt"
    },
    "_addJson": {
        "prefix": "_addJson",
        "body": [
            ".AddJsonSupport()"
        ],
        "description": "_addJson"
    },
    "_addHttp": {
        "prefix": "_addHttp",
        "body": [
            "builder.Services",
            "    .AddHttpClient(\"rest\", c => c.BaseAddress = new Uri(\"http://localhost:5227\"));"
        ],
        "description": "_addHttp"
    }
}